name: Node.js CI

on:
  pull_request:
    branches: [ "main", "QA", "Dev" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./express-gen-ts/package-lock.json

      - name: Install wait-for-it
        run: sudo apt-get install -y wait-for-it

      - name: Install dependencies
        working-directory: ./express-gen-ts
        run: npm ci

      - name: Wait for MongoDB to be ready
        run: |
          wait-for-it localhost:27017 --timeout=30 --strict -- echo "MongoDB is ready"

      - name: Lint code
        working-directory: ./express-gen-ts
        run: npm run lint

      - name: Build project
        working-directory: ./express-gen-ts
        run: npm run build --if-present

      - name: Run tests
        working-directory: ./express-gen-ts
        env:
          MONGO_URI: mongodb://localhost:27017/mystats
        run: npm run test:no-reloading
